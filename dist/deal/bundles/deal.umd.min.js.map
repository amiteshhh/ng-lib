{"version":3,"sources":["ng://deal/lib/deal.service.ts","ng://deal/environment.ts","ng://deal/lib/deal.component.ts","ng://deal/lib/deal-details/deal-details.component.ts","ng://deal/lib/deal.module.ts"],"names":["DealService","Injectable","args","providedIn","APP_CONFIG","environment","DEV","envCode","BASE_URL","PROD","DealComponent","prototype","ngOnInit","Component","selector","template","this","console","log","DealDetailsComponent","components","DealModule","forRoot","defaults","Object","assign","ngModule","NgModule","declarations","imports","exports"],"mappings":"mPAAA,IAAAA,uBAECC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,uJAIZ,SAAAH,KCPF,IAAWI,EAAwB,GACxBC,EAAc,CACrBC,IAAK,CACDC,QAAS,MACTC,SAAU,uBAEdC,KAAM,CACFF,QAAS,OACTC,SAAU,yBCRlBE,GAuBEA,EAAAC,UAAAC,SAAA,iCApBDC,EAAAA,UAASX,KAAA,CAAC,CACTY,SAAU,UACVC,SAAU,2KAQD,yFAaXL,GAPE,SAAAA,IAFAM,KAAAT,QAAUH,EAAWG,QACrBS,KAAAR,SAAWJ,EAAWI,SAEpBS,QAAQC,IAAI,aAAcd,GCpB9B,IAAAe,GAcEA,EAAAR,UAAAC,SAAA,iCAXDC,EAAAA,UAASX,KAAA,CAAC,CACTY,SAAU,kBACVC,SAAA,qPAYFI,GALE,SAAAA,IAFAH,KAAAT,QAAUH,EAAWG,QACrBS,KAAAR,SAAWJ,EAAWI,aCNpBY,EAAa,CAACV,EAAeS,GACjCE,GAOgBA,EAAAC,QAAd,SAAsBf,EAAcgB,GAElC,OADAC,OAAOC,OAAOrB,EAAYC,EAAYE,IAC/B,CACLmB,SAAUL,wBAVfM,EAAAA,SAAQzB,KAAA,CAAC,CACR0B,aAAcR,EACdS,QAAS,GAETC,QAASV,MASXC,GAbA,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealService {\n\n  constructor() { }\n}\n","export var APP_CONFIG: appConfig = {};//will be updated to environment val from below  \r\nexport var environment = {\r\n    DEV: {\r\n        envCode: 'DEV',\r\n        BASE_URL: 'http://deal.dev.com'\r\n    },\r\n    PROD: {\r\n        envCode: 'PROD',\r\n        BASE_URL: 'http://deal.prod.com'\r\n    }\r\n}\r\n\r\ninterface appConfig {\r\n    envCode?: 'DEV'|'PROD',\r\n    BASE_URL?: string,\r\n}","import { Component, OnInit } from '@angular/core';\nimport { APP_CONFIG } from '../environment'\n\n@Component({\n  selector: 'dl-deal',\n  template: `\n    <h2>I am dl-deal component </h2>\n    <div>Environment: {{envCode}}</div>\n    <div>Base Url: {{BASE_URL}}</div>\n    <p>\n      deal works!\n    </p>\n  `,\n  styles: [':host{border: 1px solid gray;display:block}']\n})\nexport class DealComponent implements OnInit {\n  //direct assignment APP_CONFIG=APP_CONFIG throws error 'cannot be named'\n  envCode = APP_CONFIG.envCode;//create a copy just for illustration\n  BASE_URL = APP_CONFIG.BASE_URL;//create a copy just for illustration\n  constructor() { \n    console.log('APP_CONFIG', APP_CONFIG)\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { APP_CONFIG } from '../../environment'\n\n@Component({\n  selector: 'dl-deal-details',\n  templateUrl: './deal-details.component.html',\n  styleUrls: ['./deal-details.component.css']\n})\nexport class DealDetailsComponent implements OnInit {\n  //direct assignment APP_CONFIG=APP_CONFIG throws error 'cannot be named'\n  envCode = APP_CONFIG.envCode;//create a copy just for illustration\n  BASE_URL = APP_CONFIG.BASE_URL;//create a copy just for illustration\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DealComponent } from './deal.component';\nimport { APP_CONFIG, environment } from '../environment';\nimport { DealDetailsComponent } from './deal-details/deal-details.component';\n\nvar components = [DealComponent, DealDetailsComponent]\n@NgModule({\n  declarations: components,\n  imports: [\n  ],\n  exports: components\n})\nexport class DealModule {\n  public static forRoot(envCode: any, defaults?: any): ModuleWithProviders {\n    Object.assign(APP_CONFIG, environment[envCode])\n    return {\n      ngModule: DealModule\n    };\n  }\n}\n"]}